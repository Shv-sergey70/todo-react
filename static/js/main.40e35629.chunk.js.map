{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","props","state","term","_onSearchChange","evt","target","value","setState","onSearchChange","this","placeholder","onChange","Component","ItemStatusFilter","buttons","name","label","selectedFilter","onFilterChange","map","isActive","type","onClick","key","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","_createTodoItem","deleteItem","filter","todo","addItem","text","_toggleProperty","arr","propName","oldItemIndex","findIndex","oldItem","newItem","slice","items","length","toLowerCase","indexOf","Error","doneCount","todoCount","visibleItems","_filter","_search","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.40e35629.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from \"react\";\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  )\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React, {Component} from \"react\";\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: ''\n    };\n\n    this._onSearchChange = (evt) => {\n      const term = evt.target.value;\n\n      this.setState({term});\n      props.onSearchChange(term);\n    }\n  }\n\n  render() {\n    const {term} = this.state;\n\n    return (\n      <input\n        className=\"form-control search-input\"\n        placeholder=\"type to search\"\n        onChange={this._onSearchChange}\n        value={term}\n      />\n    );\n  }\n};\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React, {Component} from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buttons = [\n      {name: 'all', label: 'All'},\n      {name: 'active', label: 'Active'},\n      {name: 'done', label: 'Done'}\n    ];\n  };\n\n  render() {\n    const {selectedFilter, onFilterChange} = this.props;\n\n    const buttons = this.buttons.map(({name, label}) => {\n      const isActive = selectedFilter === name;\n      return (\n        <button type=\"button\"\n                className={`btn ${isActive ? 'btn-info' : 'btn-outline-secondary'}`}\n                onClick={() => onFilterChange(name)}\n                key={name} >{label}</button>\n      )\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n};\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React from \"react\";\nimport './todo-list-item.css'\n\nconst TodoListItem = (props) => {\n  const {label, onDeleted, onToggleImportant, onToggleDone, done, important} = props;\n\n  return (\n    <span className={`todo-list-item ${done ? 'done' : ''} ${important ? 'important' : ''}`}>\n      <span\n        className=\"todo-list-item-label\"\n        onClick={onToggleDone}>\n        {label}\n      </span>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-success btn-sm float-right\"\n              onClick={onToggleImportant}>\n        <i className=\"fa fa-exclamation\" />\n      </button>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-danger btn-sm float-right\"\n              onClick={onDeleted}>\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  )\n};\n\nexport default TodoListItem;\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from \"react\";\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\n  const elements = todos.map((item) => {\n    const {\n      id,\n      ...itemProps\n    } = item;\n\n    return (<li key={id} className=\"list-group-item\">\n      <TodoListItem\n        {...itemProps}\n        onDeleted={() => onDeleted(id)}\n        onToggleImportant={() => onToggleImportant(id)}\n        onToggleDone={() => onToggleDone(id)}\n      />\n    </li>)\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      {elements}\n    </ul>\n  )\n};\n\nexport default TodoList;\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;\n","import React, {Component} from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {label: ''};\n\n     this.onLabelChange = (evt) => {\n       this.setState({label: evt.target.value});\n    };\n\n    this.onSubmit = (evt) => {\n      evt.preventDefault();\n\n      props.onItemAdded(this.state.label);\n\n      this.setState({label: ''});\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\"\n            onSubmit={this.onSubmit}>\n        <input type=\"text\"\n               className=\"form-control\"\n               onChange={this.onLabelChange}\n               placeholder=\"What needs to be done\"\n               value={this.state.label}/>\n        <button className=\"btn btn-outline-secondary\">Add&nbsp;Item</button>\n      </form>\n    )\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React, {Component} from \"react\";\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport TodoList from \"../todo-list\";\nimport ItemAddFrom from '../item-add-form';\n\nimport './app.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.maxId = 100;\n\n    this.state = {\n      todoData: [\n        this._createTodoItem('Drink Coffee'),\n        this._createTodoItem('Make Awesome App'),\n        this._createTodoItem('Have a lunch')\n      ],\n      term: '',\n      selectedFilter: 'all'\n    };\n\n    this.deleteItem = (id) => {\n      this.setState(({todoData}) => ({\n        todoData: todoData.filter((todo) => todo.id !== id)\n      }))\n    };\n\n    this.addItem = (text) => {\n      this.setState(({todoData}) => ({\n        todoData: [...todoData, this._createTodoItem(text)]\n      }));\n    };\n\n    this.onToggleImportant = (id) => {\n      this.setState(({todoData}) => ({\n        todoData: this._toggleProperty(todoData, id, 'important')\n      }));\n    };\n\n    this.onToggleDone = (id) => {\n      this.setState(({todoData}) => ({\n        todoData: this._toggleProperty(todoData, id, 'done')\n      }));\n    };\n\n    this.onSearchChange = (term) => {\n      this.setState({term});\n    };\n\n    this.onFilterChange = (selectedFilter) => {\n      this.setState({selectedFilter});\n    };\n  }\n\n  _createTodoItem(label) {\n    return {\n      label: label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  _toggleProperty(arr, id, propName) {\n    const oldItemIndex = arr.findIndex((todo) => todo.id === id);\n    const oldItem = arr[oldItemIndex];\n    const newItem = {...oldItem, [propName]: !oldItem[propName]};\n\n    return [\n      ...arr.slice(0, oldItemIndex),\n      newItem,\n      ...arr.slice(oldItemIndex + 1)\n    ];\n  }\n\n  _search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter((item) => item.label.toLowerCase().indexOf(term.toLowerCase()) > -1);\n  }\n\n  _filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        throw new Error(`Unhandled filter type ${filter}`);\n    }\n  }\n\n  render() {\n    const {todoData, term, selectedFilter} = this.state;\n    const doneCount = todoData.filter((todo) => todo.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    const visibleItems = this._filter(this._search(todoData, term), selectedFilter);\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel\n            onSearchChange={this.onSearchChange}/>\n          <ItemStatusFilter\n            onFilterChange={this.onFilterChange}\n            selectedFilter={selectedFilter}/>\n        </div>\n\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n\n        <ItemAddFrom\n          onItemAdded={this.addItem}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}